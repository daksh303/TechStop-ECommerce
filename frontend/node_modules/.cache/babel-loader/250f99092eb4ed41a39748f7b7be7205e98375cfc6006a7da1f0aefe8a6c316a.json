{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","get"],"sources":["/Users/aatish/Desktop/TechStop/frontend/src/actions/userActions.js"],"sourcesContent":["import {USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n\n} from '../constants/userConstants' \nimport axios from  'axios'\n\nexport const login =(email,password)=> async(dispatch)=>{\n\n    try{\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type':'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {'username':email,'password':password},\n            config\n            )\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type:USER_LOGIN_FAIL,\n            payload:error.response&&error.response.data.detail\n            ?error.response.data.detail\n            :error.message,\n        })\n    }\n}\n\n\nexport const logout=()=>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type:USER_LOGOUT})\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n             config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}